#version 460

#include "core/struct.glsl"
layout(local_size_x = 32) in;

layout(set = 0, binding = 0) buffer writeonly MissUbo {
  MissRecord records[];
} missUbo;

layout(set = 0, binding = 1) buffer readonly ObjectHitUbo {
  HitRecord records[];
} objectHitUbo;

layout(set = 0, binding = 2) buffer readonly LightHitUbo {
  HitRecord records[];
} lightHitUbo;

layout(push_constant) uniform Push {
  uint randomSeed;
} push;

#include "core/boolean.glsl"

void main() {
  HitRecord objectHit = objectHitUbo.records[gl_GlobalInvocationID.x];
  HitRecord lightHit = lightHitUbo.records[gl_GlobalInvocationID.x];

  MissRecord missRecord;
  missRecord.isMiss = when_and(when_lt(objectHit.isHit, 0.1f), when_lt(lightHit.isHit, 0.1f));
  missRecord.radiance = vec3(0.0f);

  missUbo.records[gl_GlobalInvocationID.x] = missRecord;
}