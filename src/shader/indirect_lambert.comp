#version 460

#include "core/struct.glsl"
layout(local_size_x = 64) in;

layout(set = 0, binding = 0) buffer writeonly ResultUbo {
  IndirectShadeRecord shadeRecord[];
} resultUbo;

layout(set = 0, binding = 1) buffer readonly ObjectHitUbo {
  HitRecord records[];
} objectHitUbo;

layout(set = 0, binding = 2) buffer readonly LightHitUbo {
  HitRecord records[];
} lightHitUbo;

layout(set = 0, binding = 3) buffer readonly MaterialSsbo {
  Material materials[];
};

layout(set = 0, binding = 4) buffer readonly LightSsbo {
  TriangleLight lights[];
};

layout(set = 0, binding = 6) uniform sampler2D colorTextureSampler[1];

layout(push_constant) uniform Push {
  uint randomSeed;
} push;

#include "indirect/lambert.glsl"

void main() {
  IndirectShadeRecord indirectShadeResult = indirectLambertShade(objectHitUbo.records[gl_GlobalInvocationID.x], 0);
  
  resultUbo.shadeRecord[gl_GlobalInvocationID.x].radiance = indirectShadeResult.radiance;
  resultUbo.shadeRecord[gl_GlobalInvocationID.x].pdf = indirectShadeResult.pdf;
  resultUbo.shadeRecord[gl_GlobalInvocationID.x].nextRay = indirectShadeResult.nextRay;
}